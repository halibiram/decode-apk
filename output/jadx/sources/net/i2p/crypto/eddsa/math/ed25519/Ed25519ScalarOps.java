package net.i2p.crypto.eddsa.math.ed25519;

import net.i2p.crypto.eddsa.math.ScalarOps;

/* loaded from: classes3.dex */
public class Ed25519ScalarOps implements ScalarOps {
    @Override // net.i2p.crypto.eddsa.math.ScalarOps
    public byte[] multiplyAndAdd(byte[] bArr, byte[] bArr2, byte[] bArr3) {
        long load_3 = Ed25519LittleEndianEncoding.load_3(bArr, 0) & 2097151;
        long load_4 = (Ed25519LittleEndianEncoding.load_4(bArr, 2) >> 5) & 2097151;
        long load_32 = (Ed25519LittleEndianEncoding.load_3(bArr, 5) >> 2) & 2097151;
        long load_42 = (Ed25519LittleEndianEncoding.load_4(bArr, 7) >> 7) & 2097151;
        long load_43 = (Ed25519LittleEndianEncoding.load_4(bArr, 10) >> 4) & 2097151;
        long load_33 = (Ed25519LittleEndianEncoding.load_3(bArr, 13) >> 1) & 2097151;
        long load_44 = (Ed25519LittleEndianEncoding.load_4(bArr, 15) >> 6) & 2097151;
        long load_34 = (Ed25519LittleEndianEncoding.load_3(bArr, 18) >> 3) & 2097151;
        long load_35 = Ed25519LittleEndianEncoding.load_3(bArr, 21) & 2097151;
        long load_45 = (Ed25519LittleEndianEncoding.load_4(bArr, 23) >> 5) & 2097151;
        long load_36 = (Ed25519LittleEndianEncoding.load_3(bArr, 26) >> 2) & 2097151;
        long load_46 = Ed25519LittleEndianEncoding.load_4(bArr, 28) >> 7;
        long load_37 = Ed25519LittleEndianEncoding.load_3(bArr2, 0) & 2097151;
        long load_47 = (Ed25519LittleEndianEncoding.load_4(bArr2, 2) >> 5) & 2097151;
        long load_38 = (Ed25519LittleEndianEncoding.load_3(bArr2, 5) >> 2) & 2097151;
        long load_48 = (Ed25519LittleEndianEncoding.load_4(bArr2, 7) >> 7) & 2097151;
        long load_49 = (Ed25519LittleEndianEncoding.load_4(bArr2, 10) >> 4) & 2097151;
        long load_39 = (Ed25519LittleEndianEncoding.load_3(bArr2, 13) >> 1) & 2097151;
        long load_410 = (Ed25519LittleEndianEncoding.load_4(bArr2, 15) >> 6) & 2097151;
        long load_310 = (Ed25519LittleEndianEncoding.load_3(bArr2, 18) >> 3) & 2097151;
        long load_311 = Ed25519LittleEndianEncoding.load_3(bArr2, 21) & 2097151;
        long load_411 = (Ed25519LittleEndianEncoding.load_4(bArr2, 23) >> 5) & 2097151;
        long load_312 = (Ed25519LittleEndianEncoding.load_3(bArr2, 26) >> 2) & 2097151;
        long load_412 = Ed25519LittleEndianEncoding.load_4(bArr2, 28) >> 7;
        long load_313 = Ed25519LittleEndianEncoding.load_3(bArr3, 0) & 2097151;
        long load_413 = (Ed25519LittleEndianEncoding.load_4(bArr3, 2) >> 5) & 2097151;
        long load_314 = (Ed25519LittleEndianEncoding.load_3(bArr3, 5) >> 2) & 2097151;
        long load_414 = (Ed25519LittleEndianEncoding.load_4(bArr3, 7) >> 7) & 2097151;
        long load_415 = (Ed25519LittleEndianEncoding.load_4(bArr3, 10) >> 4) & 2097151;
        long load_315 = (Ed25519LittleEndianEncoding.load_3(bArr3, 13) >> 1) & 2097151;
        long load_416 = (Ed25519LittleEndianEncoding.load_4(bArr3, 15) >> 6) & 2097151;
        long load_316 = (Ed25519LittleEndianEncoding.load_3(bArr3, 18) >> 3) & 2097151;
        long j = (load_3 * load_37) + load_313;
        long j2 = (load_4 * load_37) + (load_3 * load_47) + load_413;
        long j3 = (load_32 * load_37) + (load_4 * load_47) + (load_3 * load_38) + load_314;
        long j4 = (load_42 * load_37) + (load_32 * load_47) + (load_4 * load_38) + (load_3 * load_48) + load_414;
        long j5 = (load_43 * load_37) + (load_42 * load_47) + (load_32 * load_38) + (load_4 * load_48) + (load_3 * load_49) + load_415;
        long j6 = (load_33 * load_37) + (load_43 * load_47) + (load_42 * load_38) + (load_32 * load_48) + (load_4 * load_49) + (load_3 * load_39) + load_315;
        long j7 = (load_44 * load_37) + (load_33 * load_47) + (load_43 * load_38) + (load_42 * load_48) + (load_32 * load_49) + (load_4 * load_39) + (load_3 * load_410) + load_416;
        long j8 = (load_34 * load_37) + (load_44 * load_47) + (load_33 * load_38) + (load_43 * load_48) + (load_42 * load_49) + (load_32 * load_39) + (load_4 * load_410) + (load_3 * load_310) + load_316;
        long load_317 = (load_35 * load_37) + (load_34 * load_47) + (load_44 * load_38) + (load_33 * load_48) + (load_43 * load_49) + (load_42 * load_39) + (load_32 * load_410) + (load_4 * load_310) + (load_3 * load_311) + (Ed25519LittleEndianEncoding.load_3(bArr3, 21) & 2097151);
        long load_417 = (load_45 * load_37) + (load_35 * load_47) + (load_34 * load_38) + (load_44 * load_48) + (load_33 * load_49) + (load_43 * load_39) + (load_42 * load_410) + (load_32 * load_310) + (load_4 * load_311) + (load_3 * load_411) + ((Ed25519LittleEndianEncoding.load_4(bArr3, 23) >> 5) & 2097151);
        long load_318 = (load_36 * load_37) + (load_45 * load_47) + (load_35 * load_38) + (load_34 * load_48) + (load_44 * load_49) + (load_33 * load_39) + (load_43 * load_410) + (load_42 * load_310) + (load_32 * load_311) + (load_4 * load_411) + (load_3 * load_312) + ((Ed25519LittleEndianEncoding.load_3(bArr3, 26) >> 2) & 2097151);
        long load_418 = (load_37 * load_46) + (load_36 * load_47) + (load_45 * load_38) + (load_35 * load_48) + (load_34 * load_49) + (load_44 * load_39) + (load_33 * load_410) + (load_43 * load_310) + (load_42 * load_311) + (load_32 * load_411) + (load_4 * load_312) + (load_3 * load_412) + (Ed25519LittleEndianEncoding.load_4(bArr3, 28) >> 7);
        long j9 = (load_47 * load_46) + (load_36 * load_38) + (load_45 * load_48) + (load_35 * load_49) + (load_34 * load_39) + (load_44 * load_410) + (load_33 * load_310) + (load_43 * load_311) + (load_42 * load_411) + (load_32 * load_312) + (load_4 * load_412);
        long j10 = (load_38 * load_46) + (load_36 * load_48) + (load_45 * load_49) + (load_35 * load_39) + (load_34 * load_410) + (load_44 * load_310) + (load_33 * load_311) + (load_43 * load_411) + (load_42 * load_312) + (load_32 * load_412);
        long j11 = (load_48 * load_46) + (load_36 * load_49) + (load_45 * load_39) + (load_35 * load_410) + (load_34 * load_310) + (load_44 * load_311) + (load_33 * load_411) + (load_43 * load_312) + (load_42 * load_412);
        long j12 = (load_49 * load_46) + (load_36 * load_39) + (load_45 * load_410) + (load_35 * load_310) + (load_34 * load_311) + (load_44 * load_411) + (load_33 * load_312) + (load_43 * load_412);
        long j13 = (load_39 * load_46) + (load_36 * load_410) + (load_45 * load_310) + (load_35 * load_311) + (load_34 * load_411) + (load_44 * load_312) + (load_33 * load_412);
        long j14 = (load_410 * load_46) + (load_36 * load_310) + (load_45 * load_311) + (load_35 * load_411) + (load_34 * load_312) + (load_44 * load_412);
        long j15 = (load_46 * load_310) + (load_36 * load_311) + (load_45 * load_411) + (load_35 * load_312) + (load_34 * load_412);
        long j16 = (load_46 * load_311) + (load_36 * load_411) + (load_45 * load_312) + (load_35 * load_412);
        long j17 = (load_411 * load_46) + (load_36 * load_312) + (load_45 * load_412);
        long j18 = (load_46 * load_312) + (load_36 * load_412);
        long j19 = load_46 * load_412;
        long j20 = (j + 1048576) >> 21;
        long j21 = j2 + j20;
        long j22 = j - (j20 << 21);
        long j23 = (j3 + 1048576) >> 21;
        long j24 = j4 + j23;
        long j25 = j3 - (j23 << 21);
        long j26 = (j5 + 1048576) >> 21;
        long j27 = j6 + j26;
        long j28 = j5 - (j26 << 21);
        long j29 = (j7 + 1048576) >> 21;
        long j30 = j8 + j29;
        long j31 = j7 - (j29 << 21);
        long j32 = (load_317 + 1048576) >> 21;
        long j33 = load_417 + j32;
        long j34 = load_317 - (j32 << 21);
        long j35 = (load_318 + 1048576) >> 21;
        long j36 = load_418 + j35;
        long j37 = load_318 - (j35 << 21);
        long j38 = (j9 + 1048576) >> 21;
        long j39 = j10 + j38;
        long j40 = j9 - (j38 << 21);
        long j41 = (j11 + 1048576) >> 21;
        long j42 = j12 + j41;
        long j43 = j11 - (j41 << 21);
        long j44 = (j13 + 1048576) >> 21;
        long j45 = j14 + j44;
        long j46 = j13 - (j44 << 21);
        long j47 = (j15 + 1048576) >> 21;
        long j48 = j16 + j47;
        long j49 = j15 - (j47 << 21);
        long j50 = (j17 + 1048576) >> 21;
        long j51 = j18 + j50;
        long j52 = (j19 + 1048576) >> 21;
        long j53 = (j21 + 1048576) >> 21;
        long j54 = j25 + j53;
        long j55 = j21 - (j53 << 21);
        long j56 = (j24 + 1048576) >> 21;
        long j57 = j28 + j56;
        long j58 = j24 - (j56 << 21);
        long j59 = (j27 + 1048576) >> 21;
        long j60 = j31 + j59;
        long j61 = j27 - (j59 << 21);
        long j62 = (j30 + 1048576) >> 21;
        long j63 = j34 + j62;
        long j64 = j30 - (j62 << 21);
        long j65 = (j33 + 1048576) >> 21;
        long j66 = j37 + j65;
        long j67 = j33 - (j65 << 21);
        long j68 = (j36 + 1048576) >> 21;
        long j69 = j40 + j68;
        long j70 = j36 - (j68 << 21);
        long j71 = (j39 + 1048576) >> 21;
        long j72 = j43 + j71;
        long j73 = j39 - (j71 << 21);
        long j74 = (j42 + 1048576) >> 21;
        long j75 = j46 + j74;
        long j76 = j42 - (j74 << 21);
        long j77 = (j45 + 1048576) >> 21;
        long j78 = j49 + j77;
        long j79 = j45 - (j77 << 21);
        long j80 = (j48 + 1048576) >> 21;
        long j81 = (j17 - (j50 << 21)) + j80;
        long j82 = j48 - (j80 << 21);
        long j83 = (j51 + 1048576) >> 21;
        long j84 = (j19 - (j52 << 21)) + j83;
        long j85 = j51 - (j83 << 21);
        long j86 = (j52 * 666643) + j70;
        long j87 = (j52 * 470296) + j69;
        long j88 = (j52 * 654183) + j73;
        long j89 = j72 - (j52 * 997805);
        long j90 = (j52 * 136657) + j76;
        long j91 = j75 - (j52 * 683901);
        long j92 = (j84 * 666643) + j66;
        long j93 = (j84 * 470296) + j86;
        long j94 = (j84 * 654183) + j87;
        long j95 = j88 - (j84 * 997805);
        long j96 = (j84 * 136657) + j89;
        long j97 = j90 - (j84 * 683901);
        long j98 = (j85 * 666643) + j67;
        long j99 = (j85 * 470296) + j92;
        long j100 = (j85 * 654183) + j93;
        long j101 = (j85 * 136657) + j95;
        long j102 = j96 - (j85 * 683901);
        long j103 = (j81 * 470296) + j98;
        long j104 = (j81 * 654183) + j99;
        long j105 = (j81 * 136657) + (j94 - (j85 * 997805));
        long j106 = (j82 * 666643) + j64;
        long j107 = (j82 * 470296) + (j81 * 666643) + j63;
        long j108 = (j82 * 654183) + j103;
        long j109 = j104 - (j82 * 997805);
        long j110 = (j82 * 136657) + (j100 - (j81 * 997805));
        long j111 = j105 - (j82 * 683901);
        long j112 = (j78 * 666643) + j60;
        long j113 = (j78 * 470296) + j106;
        long j114 = (j78 * 654183) + j107;
        long j115 = j108 - (j78 * 997805);
        long j116 = (j78 * 136657) + j109;
        long j117 = j110 - (j78 * 683901);
        long j118 = (j112 + 1048576) >> 21;
        long j119 = j113 + j118;
        long j120 = j112 - (j118 << 21);
        long j121 = (j114 + 1048576) >> 21;
        long j122 = j115 + j121;
        long j123 = j114 - (j121 << 21);
        long j124 = (j116 + 1048576) >> 21;
        long j125 = j117 + j124;
        long j126 = j116 - (j124 << 21);
        long j127 = (j111 + 1048576) >> 21;
        long j128 = (j101 - (j81 * 683901)) + j127;
        long j129 = j111 - (j127 << 21);
        long j130 = (j102 + 1048576) >> 21;
        long j131 = j97 + j130;
        long j132 = j102 - (j130 << 21);
        long j133 = (j91 + 1048576) >> 21;
        long j134 = j79 + j133;
        long j135 = j91 - (j133 << 21);
        long j136 = (j119 + 1048576) >> 21;
        long j137 = j123 + j136;
        long j138 = j119 - (j136 << 21);
        long j139 = (j122 + 1048576) >> 21;
        long j140 = j126 + j139;
        long j141 = j122 - (j139 << 21);
        long j142 = (j125 + 1048576) >> 21;
        long j143 = j129 + j142;
        long j144 = j125 - (j142 << 21);
        long j145 = (j128 + 1048576) >> 21;
        long j146 = j132 + j145;
        long j147 = j128 - (j145 << 21);
        long j148 = (j131 + 1048576) >> 21;
        long j149 = j135 + j148;
        long j150 = j131 - (j148 << 21);
        long j151 = (j134 * 470296) + j120;
        long j152 = (j134 * 654183) + j138;
        long j153 = (j134 * 136657) + j141;
        long j154 = j140 - (j134 * 683901);
        long j155 = (j149 * 654183) + j151;
        long j156 = (j150 * 470296) + (j149 * 666643) + j57;
        long j157 = (j150 * 136657) + (j152 - (j149 * 997805));
        long j158 = ((j149 * 136657) + (j137 - (j134 * 997805))) - (j150 * 683901);
        long j159 = (j146 * 654183) + j156;
        long j160 = j157 - (j146 * 683901);
        long j161 = (j147 * 470296) + (j146 * 666643) + j54;
        long j162 = (j147 * 654183) + (j146 * 470296) + (j150 * 666643) + j58;
        long j163 = (j147 * 136657) + (((j150 * 654183) + ((j149 * 470296) + ((j134 * 666643) + j61))) - (j146 * 997805));
        long j164 = ((j146 * 136657) + (j155 - (j150 * 997805))) - (j147 * 683901);
        long j165 = (j143 * 666643) + j22;
        long j166 = (j143 * 654183) + j161;
        long j167 = (j143 * 136657) + (j159 - (j147 * 997805));
        long j168 = (j165 + 1048576) >> 21;
        long j169 = (j143 * 470296) + (j147 * 666643) + j55 + j168;
        long j170 = j165 - (j168 << 21);
        long j171 = (j166 + 1048576) >> 21;
        long j172 = (j162 - (j143 * 997805)) + j171;
        long j173 = j166 - (j171 << 21);
        long j174 = (j167 + 1048576) >> 21;
        long j175 = (j163 - (j143 * 683901)) + j174;
        long j176 = j167 - (j174 << 21);
        long j177 = (j164 + 1048576) >> 21;
        long j178 = j160 + j177;
        long j179 = j164 - (j177 << 21);
        long j180 = (j158 + 1048576) >> 21;
        long j181 = (j153 - (j149 * 683901)) + j180;
        long j182 = j158 - (j180 << 21);
        long j183 = (j154 + 1048576) >> 21;
        long j184 = j144 + j183;
        long j185 = j154 - (j183 << 21);
        long j186 = (j169 + 1048576) >> 21;
        long j187 = j173 + j186;
        long j188 = j169 - (j186 << 21);
        long j189 = (j172 + 1048576) >> 21;
        long j190 = j176 + j189;
        long j191 = j172 - (j189 << 21);
        long j192 = (j175 + 1048576) >> 21;
        long j193 = j179 + j192;
        long j194 = j175 - (j192 << 21);
        long j195 = (j178 + 1048576) >> 21;
        long j196 = j182 + j195;
        long j197 = j178 - (j195 << 21);
        long j198 = (j181 + 1048576) >> 21;
        long j199 = j185 + j198;
        long j200 = j181 - (j198 << 21);
        long j201 = (j184 + 1048576) >> 21;
        long j202 = (j201 * 666643) + j170;
        long j203 = (j201 * 654183) + j187;
        long j204 = (j201 * 136657) + j190;
        long j205 = j202 >> 21;
        long j206 = (j201 * 470296) + j188 + j205;
        long j207 = j202 - (j205 << 21);
        long j208 = j206 >> 21;
        long j209 = j203 + j208;
        long j210 = j206 - (j208 << 21);
        long j211 = j209 >> 21;
        long j212 = (j191 - (j201 * 997805)) + j211;
        long j213 = j209 - (j211 << 21);
        long j214 = j212 >> 21;
        long j215 = j204 + j214;
        long j216 = j212 - (j214 << 21);
        long j217 = j215 >> 21;
        long j218 = (j194 - (j201 * 683901)) + j217;
        long j219 = j215 - (j217 << 21);
        long j220 = j218 >> 21;
        long j221 = j193 + j220;
        long j222 = j218 - (j220 << 21);
        long j223 = j221 >> 21;
        long j224 = j197 + j223;
        long j225 = j221 - (j223 << 21);
        long j226 = j224 >> 21;
        long j227 = j196 + j226;
        long j228 = j224 - (j226 << 21);
        long j229 = j227 >> 21;
        long j230 = j200 + j229;
        long j231 = j227 - (j229 << 21);
        long j232 = j230 >> 21;
        long j233 = j199 + j232;
        long j234 = j230 - (j232 << 21);
        long j235 = j233 >> 21;
        long j236 = (j184 - (j201 << 21)) + j235;
        long j237 = j233 - (j235 << 21);
        long j238 = j236 >> 21;
        long j239 = (666643 * j238) + j207;
        long j240 = j239 >> 21;
        long j241 = (470296 * j238) + j210 + j240;
        long j242 = j241 >> 21;
        long j243 = (654183 * j238) + j213 + j242;
        long j244 = j241 - (j242 << 21);
        long j245 = j243 >> 21;
        long j246 = (j216 - (997805 * j238)) + j245;
        long j247 = j243 - (j245 << 21);
        long j248 = j246 >> 21;
        long j249 = (136657 * j238) + j219 + j248;
        long j250 = j246 - (j248 << 21);
        long j251 = j249 >> 21;
        long j252 = (j222 - (j238 * 683901)) + j251;
        long j253 = j249 - (j251 << 21);
        long j254 = j252 >> 21;
        long j255 = j225 + j254;
        long j256 = j252 - (j254 << 21);
        long j257 = j255 >> 21;
        long j258 = j228 + j257;
        long j259 = j255 - (j257 << 21);
        long j260 = j258 >> 21;
        long j261 = j231 + j260;
        long j262 = j258 - (j260 << 21);
        long j263 = j261 >> 21;
        long j264 = j234 + j263;
        long j265 = j264 >> 21;
        long j266 = j237 + j265;
        long j267 = j264 - (j265 << 21);
        long j268 = j266 >> 21;
        long j269 = (j236 - (j238 << 21)) + j268;
        long j270 = j266 - (j268 << 21);
        return new byte[]{(byte) (j239 - (j240 << 21)), (byte) (r6 >> 8), (byte) ((r6 >> 16) | (j244 << 5)), (byte) (j244 >> 3), (byte) (j244 >> 11), (byte) ((j244 >> 19) | (j247 << 2)), (byte) (j247 >> 6), (byte) ((j247 >> 14) | (j250 << 7)), (byte) (j250 >> 1), (byte) (j250 >> 9), (byte) ((j250 >> 17) | (j253 << 4)), (byte) (j253 >> 4), (byte) (j253 >> 12), (byte) ((j253 >> 20) | (j256 << 1)), (byte) (j256 >> 7), (byte) ((j256 >> 15) | (j259 << 6)), (byte) (j259 >> 2), (byte) (j259 >> 10), (byte) ((j259 >> 18) | (j262 << 3)), (byte) (j262 >> 5), (byte) (j262 >> 13), (byte) (j261 - (j263 << 21)), (byte) (r11 >> 8), (byte) ((r11 >> 16) | (j267 << 5)), (byte) (j267 >> 3), (byte) (j267 >> 11), (byte) ((j267 >> 19) | (j270 << 2)), (byte) (j270 >> 6), (byte) ((j270 >> 14) | (j269 << 7)), (byte) (j269 >> 1), (byte) (j269 >> 9), (byte) (j269 >> 17)};
    }

    @Override // net.i2p.crypto.eddsa.math.ScalarOps
    public byte[] reduce(byte[] bArr) {
        long load_3 = Ed25519LittleEndianEncoding.load_3(bArr, 0) & 2097151;
        long load_4 = (Ed25519LittleEndianEncoding.load_4(bArr, 2) >> 5) & 2097151;
        long load_32 = (Ed25519LittleEndianEncoding.load_3(bArr, 5) >> 2) & 2097151;
        long load_42 = (Ed25519LittleEndianEncoding.load_4(bArr, 7) >> 7) & 2097151;
        long load_43 = (Ed25519LittleEndianEncoding.load_4(bArr, 10) >> 4) & 2097151;
        long load_33 = (Ed25519LittleEndianEncoding.load_3(bArr, 13) >> 1) & 2097151;
        long load_44 = (Ed25519LittleEndianEncoding.load_4(bArr, 15) >> 6) & 2097151;
        long load_34 = (Ed25519LittleEndianEncoding.load_3(bArr, 18) >> 3) & 2097151;
        long load_35 = Ed25519LittleEndianEncoding.load_3(bArr, 21) & 2097151;
        long load_45 = (Ed25519LittleEndianEncoding.load_4(bArr, 23) >> 5) & 2097151;
        long load_36 = (Ed25519LittleEndianEncoding.load_3(bArr, 26) >> 2) & 2097151;
        long load_46 = (Ed25519LittleEndianEncoding.load_4(bArr, 28) >> 7) & 2097151;
        long load_47 = (Ed25519LittleEndianEncoding.load_4(bArr, 31) >> 4) & 2097151;
        long load_37 = (Ed25519LittleEndianEncoding.load_3(bArr, 34) >> 1) & 2097151;
        long load_48 = (Ed25519LittleEndianEncoding.load_4(bArr, 36) >> 6) & 2097151;
        long load_38 = (Ed25519LittleEndianEncoding.load_3(bArr, 39) >> 3) & 2097151;
        long load_39 = Ed25519LittleEndianEncoding.load_3(bArr, 42) & 2097151;
        long load_49 = (Ed25519LittleEndianEncoding.load_4(bArr, 44) >> 5) & 2097151;
        long load_310 = (Ed25519LittleEndianEncoding.load_3(bArr, 47) >> 2) & 2097151;
        long load_410 = (Ed25519LittleEndianEncoding.load_4(bArr, 49) >> 7) & 2097151;
        long load_411 = (Ed25519LittleEndianEncoding.load_4(bArr, 52) >> 4) & 2097151;
        long load_311 = (Ed25519LittleEndianEncoding.load_3(bArr, 55) >> 1) & 2097151;
        long load_412 = (Ed25519LittleEndianEncoding.load_4(bArr, 57) >> 6) & 2097151;
        long load_413 = Ed25519LittleEndianEncoding.load_4(bArr, 60) >> 3;
        long j = (load_413 * 666643) + load_46;
        long j2 = (load_413 * 470296) + load_47;
        long j3 = (load_413 * 654183) + load_37;
        long j4 = load_48 - (load_413 * 997805);
        long j5 = (load_413 * 136657) + load_38;
        long j6 = load_39 - (load_413 * 683901);
        long j7 = (load_412 * 666643) + load_36;
        long j8 = (load_412 * 470296) + j;
        long j9 = (load_412 * 654183) + j2;
        long j10 = j3 - (load_412 * 997805);
        long j11 = (load_412 * 136657) + j4;
        long j12 = j5 - (load_412 * 683901);
        long j13 = (load_311 * 666643) + load_45;
        long j14 = (load_311 * 654183) + j8;
        long j15 = j9 - (load_311 * 997805);
        long j16 = j11 - (load_311 * 683901);
        long j17 = (load_411 * 470296) + j13;
        long j18 = (load_411 * 654183) + (load_311 * 470296) + j7;
        long j19 = ((load_311 * 136657) + j10) - (load_411 * 683901);
        long j20 = (load_410 * 654183) + j17;
        long j21 = j18 - (load_410 * 997805);
        long j22 = (load_410 * 136657) + (j14 - (load_411 * 997805));
        long j23 = ((load_411 * 136657) + j15) - (load_410 * 683901);
        long j24 = (load_310 * 666643) + load_44;
        long j25 = (load_310 * 470296) + (load_410 * 666643) + load_34;
        long j26 = (load_310 * 654183) + (load_410 * 470296) + (load_411 * 666643) + load_35;
        long j27 = (load_310 * 136657) + j21;
        long j28 = j22 - (load_310 * 683901);
        long j29 = (j24 + 1048576) >> 21;
        long j30 = j25 + j29;
        long j31 = j24 - (j29 << 21);
        long j32 = (j26 + 1048576) >> 21;
        long j33 = (j20 - (load_310 * 997805)) + j32;
        long j34 = j26 - (j32 << 21);
        long j35 = (j27 + 1048576) >> 21;
        long j36 = j28 + j35;
        long j37 = j27 - (j35 << 21);
        long j38 = (j23 + 1048576) >> 21;
        long j39 = j19 + j38;
        long j40 = j23 - (j38 << 21);
        long j41 = (j16 + 1048576) >> 21;
        long j42 = j12 + j41;
        long j43 = j16 - (j41 << 21);
        long j44 = (j6 + 1048576) >> 21;
        long j45 = load_49 + j44;
        long j46 = j6 - (j44 << 21);
        long j47 = (j30 + 1048576) >> 21;
        long j48 = j34 + j47;
        long j49 = j30 - (j47 << 21);
        long j50 = (j33 + 1048576) >> 21;
        long j51 = j37 + j50;
        long j52 = j33 - (j50 << 21);
        long j53 = (j36 + 1048576) >> 21;
        long j54 = j40 + j53;
        long j55 = j36 - (j53 << 21);
        long j56 = (j39 + 1048576) >> 21;
        long j57 = j43 + j56;
        long j58 = j39 - (j56 << 21);
        long j59 = (j42 + 1048576) >> 21;
        long j60 = j46 + j59;
        long j61 = j42 - (j59 << 21);
        long j62 = (j45 * 470296) + j31;
        long j63 = (j45 * 654183) + j49;
        long j64 = j48 - (j45 * 997805);
        long j65 = (j45 * 136657) + j52;
        long j66 = j51 - (j45 * 683901);
        long j67 = (j60 * 666643) + load_43;
        long j68 = (j60 * 470296) + (j45 * 666643) + load_33;
        long j69 = (j60 * 654183) + j62;
        long j70 = (j61 * 654183) + j68;
        long j71 = (j61 * 136657) + (j63 - (j60 * 997805));
        long j72 = ((j60 * 136657) + j64) - (j61 * 683901);
        long j73 = (j58 * 666643) + load_4;
        long j74 = (j58 * 470296) + (j57 * 666643) + load_32;
        long j75 = (j58 * 654183) + (j57 * 470296) + (j61 * 666643) + load_42;
        long j76 = ((j57 * 654183) + ((j61 * 470296) + j67)) - (j58 * 997805);
        long j77 = (j58 * 136657) + (j70 - (j57 * 997805));
        long j78 = ((j57 * 136657) + (j69 - (j61 * 997805))) - (j58 * 683901);
        long j79 = (j54 * 666643) + load_3;
        long j80 = (j54 * 654183) + j74;
        long j81 = (j54 * 136657) + j76;
        long j82 = (j79 + 1048576) >> 21;
        long j83 = (j54 * 470296) + j73 + j82;
        long j84 = j79 - (j82 << 21);
        long j85 = (j80 + 1048576) >> 21;
        long j86 = (j75 - (j54 * 997805)) + j85;
        long j87 = j80 - (j85 << 21);
        long j88 = (j81 + 1048576) >> 21;
        long j89 = (j77 - (j54 * 683901)) + j88;
        long j90 = j81 - (j88 << 21);
        long j91 = (j78 + 1048576) >> 21;
        long j92 = (j71 - (j57 * 683901)) + j91;
        long j93 = j78 - (j91 << 21);
        long j94 = (j72 + 1048576) >> 21;
        long j95 = (j65 - (j60 * 683901)) + j94;
        long j96 = j72 - (j94 << 21);
        long j97 = (j66 + 1048576) >> 21;
        long j98 = j55 + j97;
        long j99 = j66 - (j97 << 21);
        long j100 = (j83 + 1048576) >> 21;
        long j101 = j87 + j100;
        long j102 = j83 - (j100 << 21);
        long j103 = (j86 + 1048576) >> 21;
        long j104 = j90 + j103;
        long j105 = j86 - (j103 << 21);
        long j106 = (j89 + 1048576) >> 21;
        long j107 = j93 + j106;
        long j108 = j89 - (j106 << 21);
        long j109 = (j92 + 1048576) >> 21;
        long j110 = j96 + j109;
        long j111 = j92 - (j109 << 21);
        long j112 = (j95 + 1048576) >> 21;
        long j113 = j99 + j112;
        long j114 = j95 - (j112 << 21);
        long j115 = (j98 + 1048576) >> 21;
        long j116 = j98 - (j115 << 21);
        long j117 = (j115 * 666643) + j84;
        long j118 = (j115 * 470296) + j102;
        long j119 = (j115 * 654183) + j101;
        long j120 = j105 - (j115 * 997805);
        long j121 = (j115 * 136657) + j104;
        long j122 = j108 - (j115 * 683901);
        long j123 = j117 >> 21;
        long j124 = j118 + j123;
        long j125 = j117 - (j123 << 21);
        long j126 = j124 >> 21;
        long j127 = j119 + j126;
        long j128 = j124 - (j126 << 21);
        long j129 = j127 >> 21;
        long j130 = j120 + j129;
        long j131 = j127 - (j129 << 21);
        long j132 = j130 >> 21;
        long j133 = j121 + j132;
        long j134 = j130 - (j132 << 21);
        long j135 = j133 >> 21;
        long j136 = j122 + j135;
        long j137 = j133 - (j135 << 21);
        long j138 = j136 >> 21;
        long j139 = j107 + j138;
        long j140 = j136 - (j138 << 21);
        long j141 = j139 >> 21;
        long j142 = j111 + j141;
        long j143 = j139 - (j141 << 21);
        long j144 = j142 >> 21;
        long j145 = j110 + j144;
        long j146 = j142 - (j144 << 21);
        long j147 = j145 >> 21;
        long j148 = j114 + j147;
        long j149 = j145 - (j147 << 21);
        long j150 = j148 >> 21;
        long j151 = j113 + j150;
        long j152 = j148 - (j150 << 21);
        long j153 = j151 >> 21;
        long j154 = j116 + j153;
        long j155 = j151 - (j153 << 21);
        long j156 = j154 >> 21;
        long j157 = (666643 * j156) + j125;
        long j158 = j157 >> 21;
        long j159 = (470296 * j156) + j128 + j158;
        long j160 = j159 >> 21;
        long j161 = (654183 * j156) + j131 + j160;
        long j162 = j159 - (j160 << 21);
        long j163 = j161 >> 21;
        long j164 = (j134 - (997805 * j156)) + j163;
        long j165 = j161 - (j163 << 21);
        long j166 = j164 >> 21;
        long j167 = (136657 * j156) + j137 + j166;
        long j168 = j164 - (j166 << 21);
        long j169 = j167 >> 21;
        long j170 = (j140 - (j156 * 683901)) + j169;
        long j171 = j167 - (j169 << 21);
        long j172 = j170 >> 21;
        long j173 = j143 + j172;
        long j174 = j170 - (j172 << 21);
        long j175 = j173 >> 21;
        long j176 = j146 + j175;
        long j177 = j173 - (j175 << 21);
        long j178 = j176 >> 21;
        long j179 = j149 + j178;
        long j180 = j176 - (j178 << 21);
        long j181 = j179 >> 21;
        long j182 = j152 + j181;
        long j183 = j182 >> 21;
        long j184 = j155 + j183;
        long j185 = j182 - (j183 << 21);
        long j186 = j184 >> 21;
        long j187 = (j154 - (j156 << 21)) + j186;
        long j188 = j184 - (j186 << 21);
        return new byte[]{(byte) (j157 - (j158 << 21)), (byte) (r4 >> 8), (byte) ((r4 >> 16) | (j162 << 5)), (byte) (j162 >> 3), (byte) (j162 >> 11), (byte) ((j162 >> 19) | (j165 << 2)), (byte) (j165 >> 6), (byte) ((j165 >> 14) | (j168 << 7)), (byte) (j168 >> 1), (byte) (j168 >> 9), (byte) ((j168 >> 17) | (j171 << 4)), (byte) (j171 >> 4), (byte) (j171 >> 12), (byte) ((j171 >> 20) | (j174 << 1)), (byte) (j174 >> 7), (byte) ((j174 >> 15) | (j177 << 6)), (byte) (j177 >> 2), (byte) (j177 >> 10), (byte) ((j177 >> 18) | (j180 << 3)), (byte) (j180 >> 5), (byte) (j180 >> 13), (byte) (j179 - (j181 << 21)), (byte) (r6 >> 8), (byte) ((r6 >> 16) | (j185 << 5)), (byte) (j185 >> 3), (byte) (j185 >> 11), (byte) ((j185 >> 19) | (j188 << 2)), (byte) (j188 >> 6), (byte) ((j188 >> 14) | (j187 << 7)), (byte) (j187 >> 1), (byte) (j187 >> 9), (byte) (j187 >> 17)};
    }
}
