package com.google.android.gms.ads.internal.client;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.ProviderInfo;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.google.android.gms.common.wrappers.Wrappers;
import com.google.android.gms.internal.ads.zzbsn;
import com.google.android.gms.internal.ads.zzcec;
import com.panda912.muddy.ObfuscatedString;

/* loaded from: classes2.dex */
public final class zzek extends ContentProvider {
    @Override // android.content.ContentProvider
    public final void attachInfo(Context context, ProviderInfo providerInfo) {
        Bundle bundle = null;
        try {
            bundle = Wrappers.packageManager(context).getApplicationInfo(context.getPackageName(), 128).metaData;
        } catch (PackageManager.NameNotFoundException e) {
            zzcec.zzh(new ObfuscatedString(new long[]{7999762973376009283L, 8398134607920742144L, 5266519910135503982L, 7276063793219241164L, -2040408289399721236L, -9179422604889142134L, -7259069594368646096L}).toString(), e);
        } catch (NullPointerException e2) {
            zzcec.zzh(new ObfuscatedString(new long[]{-1556521261703021365L, -769180942504218039L, 4398506261836327532L, -8666127918450518361L, -2757922321989843849L, 2336299681634426212L, 9948558703818571L}).toString(), e2);
        }
        zzbsn zza = zzbsn.zza();
        if (bundle == null) {
            zzcec.zzg(new ObfuscatedString(new long[]{-1760454522106055499L, -2309485095759838016L, 2063109660878844555L, -3383355761357512356L}).toString());
        } else {
            try {
                String str = (String) bundle.get(new ObfuscatedString(new long[]{-4925457526355431925L, 2727827139508017335L, 1273380946791490986L, 1719650803254573281L, -8740379054348070848L, -3609145163875496292L, -8696823559688420074L}).toString());
                try {
                    Boolean bool = (Boolean) bundle.get(new ObfuscatedString(new long[]{-5283096058304997769L, 8970176164586670191L, -617757017429178049L, -4882856740885052862L, 4320613111007420793L, -4752089625771808202L, -5129147778197727880L, -6330249373457506608L}).toString());
                    try {
                        String str2 = (String) bundle.get(new ObfuscatedString(new long[]{587219350363366310L, -8756231991904531343L, 6770368160411634427L, 2796973740164801609L, -7864763138067474761L, 7194006595669452095L, -1175563216223942775L}).toString());
                        if (str != null) {
                            if (str.matches(new ObfuscatedString(new long[]{123468455230040805L, -1543828981616328391L, -8221992434352953429L, 1478647163960125645L, 1225957187387992102L}).toString())) {
                                zzcec.zze(new ObfuscatedString(new long[]{5854769395453456672L, 475406443799010984L, -7441630340644685011L, 7400765521484556922L, 4452751055591139850L, 9017039816688853350L, 1643408697926049547L, -6866753025879096614L}).toString().concat(str));
                                if (bool == null || !bool.booleanValue()) {
                                    zza.zzb(context, str);
                                }
                            } else {
                                throw new IllegalStateException(new ObfuscatedString(new long[]{-8806871154652225061L, 6394870792965363785L, 482697502807785308L, 5336182456681591320L, -6246389894294150086L, 3462956891226885017L, 4542931727253564431L, 3595197121914010598L, 2003311207501330093L, 1817964932933172418L, -7884384654961169280L, 5297287329295236816L, -3333429413175996374L, -7588763616242431422L, -666415014000744600L, -1551446607065826534L, -9088939538069150231L, -491616695921908220L, 5600982108324115473L, -1400561196926319429L, -1656293297857280154L, 529572104203712986L, 1300655237542528010L, -1425670126074757226L, 363025503193496822L, -8806311054752868676L, -47451385496572994L, 7089588075859746911L, 2230914228152762267L, -5015416490865246964L, -2925045744790700509L, 8386044630249516144L, 2683419690991185754L, 3310017828641910470L, 5334223373740547479L, -3025498551177372502L, 518896877585162657L, 4800686460717405494L, -163786173552881196L, 6470344318658387876L, 4410902488588634251L, -4259003197291174941L, 2731914534716333694L, -8969729066257685351L, 4345221263238452307L, 3156223474196881099L, -6493725577063083517L, -8082149333329465467L, -1149222682551320577L, 4770705067676566953L, -7480784753467677773L, -681079789137890115L, -4559618695550111322L, 5089557023655851013L, 7115559888976337777L, 8563379026573533511L, 7412819593443937633L, 22547759160737023L, 2329079488704441219L, 7530478045764612530L, -5311180280812742611L, 4680632681615469389L, 1554946028362187226L, -6281060868391254212L, -223145024554893107L, 212678181484358408L, -7215961850668330655L, -7517186883963257803L, 4827219245643550477L, 5325376134207948563L, 5599245160424692020L}).toString());
                            }
                        } else if (!TextUtils.isEmpty(str2)) {
                            zzcec.zze(new ObfuscatedString(new long[]{8549854695748756618L, -1662368769656932433L, -7444620296205925756L, -4646464611793263917L, -6429161914153634028L, 9106858426669314864L, -1517976394195955600L}).toString().concat(String.valueOf(str2)));
                        } else {
                            throw new IllegalStateException(new ObfuscatedString(new long[]{3751862810596977419L, -5145682185780534750L, -7840484246978227443L, -8365684315234595583L, -3813026346518450616L, 6218967039172612650L, 8406754729086563531L, 8143929585885642308L, -3525061654363213474L, 9000369420893937919L, 1482011906289754643L, -6233478913170874080L, 664290227087133264L, 507578453873058140L, 788203622536707887L, 4468919621086447975L, -6848221896094409734L, -2215728093122673675L, 2530751880133703279L, -1646016271091990329L, 3290561381860548985L, 494459454015706281L, 842495724799515107L, 2742158470834280385L, -5215367403965978003L, -2841787557239381122L, -7733621536033300364L, -8293975955954250141L, 4252534980000241835L, 8556674844832599539L, 7825970197535905465L, 8727749212876962035L, 3325189944651256175L, -12637829286195933L, -8471090384730386765L, -4248397682583830879L, -2201407751638417648L, 4219457085343789077L, -7885020167706422869L, 7041242770589593501L, -1220209390314309543L, -6171459543888595015L, -7509777882425018035L, 1196845242124840163L, -2769450975631004290L, 4097029590141407L, -715888462703731061L, 8020782007895522630L, -1176912191317885415L, 2940311002117077418L, 4625701291524107914L, 8729760193327732969L, 511081744491399869L, 8591365137873465869L, 5021640281811690203L, -9039389286339612911L, 7356613761707272054L, -2586941096621624568L, 7140259391243177324L, 4039281470575013570L, 5268939145856092653L, -2189702728870723713L, -1161366570480453610L, 4701754130556554659L, 216824192803980479L, -8309527068245348361L, 1592863988568644658L, -7538951100434682876L, 6775932064284049947L, -1804193664532337779L, 2104225801409305543L, -6274607615445916387L, 4545517738234630342L, -2450246721056627372L, 512248476513506969L, 5566239313961429970L, 750069269624049145L, -1458478744108684523L, 3830455816597390864L, -1785798029238441244L, -6458169609985574277L}).toString());
                        }
                    } catch (ClassCastException e3) {
                        throw new IllegalStateException(new ObfuscatedString(new long[]{-1602709499818319357L, -2852898684944349281L, -218802440751915606L, 4218794205505491771L, 1748880174228243096L, -5176150755369967940L, -1983567236948295753L, 4397539468153827443L, 2201637065667063783L, -3425491130598628939L, -8807837297632365450L, 1721919154145036160L}).toString(), e3);
                    }
                } catch (ClassCastException e4) {
                    throw new IllegalStateException(new ObfuscatedString(new long[]{-641928724394635657L, 3739591601626832679L, -297749134212119720L, -2095753696503924892L, -6539095901750994591L, -2346197846735234830L, 3777873957435535754L, 644169431801078152L, -767015793564027207L, 8494889205287518099L, 1274302286128100225L, -1959417446397585645L, -2771955491803536925L}).toString(), e4);
                }
            } catch (ClassCastException e5) {
                throw new IllegalStateException(new ObfuscatedString(new long[]{-8040027442395352980L, 6467153541478216787L, 3827110655525339998L, -4630445977205022616L, 702558878149711415L, 56269870237129087L, -6344056734165469709L, -3126725643142433111L, -2563629140212542906L, 5241042395048737521L, 8193987744677261580L}).toString(), e5);
            }
        }
        if (bundle != null) {
            boolean z = bundle.getBoolean(new ObfuscatedString(new long[]{-8633322035936628123L, 6108498643969361664L, 677309526687372654L, -2674791260963980576L, 1059574878449209367L, -1522086055238594746L, 2748694423632424613L, 4421702720281007349L}).toString(), false);
            boolean z2 = bundle.getBoolean(new ObfuscatedString(new long[]{8104394857240131134L, 5197940335672733684L, 2084422639118576596L, -2942003225370528000L, 4977683643899318331L, -4626322788645692347L, 8082506760446465966L, 8776416230666639043L}).toString(), false);
            if (z) {
                zzcec.zze(new ObfuscatedString(new long[]{-8608853080694709570L, -3296154313182195609L, -8386341146964214102L, -4140158189740916569L, 898244968796986140L, 2464315575232158383L, -9174939615270064674L, -309537126164454376L, 2938502814212799351L, -7872867758066367707L}).toString());
            }
            if (z2) {
                zzcec.zze(new ObfuscatedString(new long[]{-9184396881580451724L, 1767746133048638699L, 5216273006793090933L, 2820849962909637982L, 5180984096858502851L, -2419961678802959938L, -7648609246925352429L, -7429964451088485270L, -7295552966598308415L}).toString());
            }
        }
        super.attachInfo(context, providerInfo);
    }

    @Override // android.content.ContentProvider
    public final int delete(@NonNull Uri uri, String str, String[] strArr) {
        return 0;
    }

    @Override // android.content.ContentProvider
    @Nullable
    public final String getType(@NonNull Uri uri) {
        return null;
    }

    @Override // android.content.ContentProvider
    @Nullable
    public final Uri insert(@NonNull Uri uri, ContentValues contentValues) {
        return null;
    }

    @Override // android.content.ContentProvider
    public final boolean onCreate() {
        return false;
    }

    @Override // android.content.ContentProvider
    @Nullable
    public final Cursor query(@NonNull Uri uri, String[] strArr, String str, String[] strArr2, String str2) {
        return null;
    }

    @Override // android.content.ContentProvider
    public final int update(@NonNull Uri uri, ContentValues contentValues, String str, String[] strArr) {
        return 0;
    }
}
