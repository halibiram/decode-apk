name: Decompile APK with JADX & Apktool

on:
  push:
    paths:
      - '*.apk'
  workflow_dispatch:

jobs:
  decompile:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # JADX indir
      - name: Download JADX
        run: |
          wget -q https://github.com/skylot/jadx/releases/download/v1.5.0/jadx-1.5.0.zip
          unzip -q jadx-1.5.0.zip -d jadx
          chmod +x jadx/bin/jadx

      # Apktool indir
      - name: Download Apktool
        run: |
          wget -q https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar -O apktool.jar
          echo "java -jar $(pwd)/apktool.jar \"\$@\"" > apktool
          chmod +x apktool

      - name: Find APK file
        id: find_apk
        run: |
          APK_FILE=$(find . -maxdepth 1 -name "*.apk" | head -n 1)
          if [ -z "$APK_FILE" ]; then
            echo "❌ APK bulunamadı!"
            exit 1
          fi
          echo "apk_path=$APK_FILE" >> $GITHUB_OUTPUT
          echo "apk_name=$(basename $APK_FILE .apk)" >> $GITHUB_OUTPUT

      # JADX ile decompile
      - name: Decompile with JADX
        run: |
          ./jadx/bin/jadx -d decompiled_jadx \
            --show-bad-code \
            ${{ steps.find_apk.outputs.apk_path }}

      # Apktool ile decompile
      - name: Decompile with Apktool
        run: |
          ./apktool d ${{ steps.find_apk.outputs.apk_path }} -o decompiled_apktool -f

      # Analiz için her iki klasörü de işleyebilirsin
      - name: Analyze structure
        run: |
          echo "=== JADX kaynak dosyaları ===" > analysis_report.txt
          find decompiled_jadx -name '*.java' | head -20 >> analysis_report.txt
          echo "" >> analysis_report.txt
          echo "Toplam Java dosyası: $(find decompiled_jadx -name '*.java' | wc -l)" >> analysis_report.txt

          echo "" >> analysis_report.txt
          echo "=== Apktool smali dosyaları ===" >> analysis_report.txt
          find decompiled_apktool -name '*.smali' | head -20 >> analysis_report.txt
          echo "" >> analysis_report.txt
          echo "Toplam smali dosyası: $(find decompiled_apktool -name '*.smali' | wc -l)" >> analysis_report.txt

          cat analysis_report.txt

      - name: Upload JADX sources
        uses: actions/upload-artifact@v4
        with:
          name: jadx-sources-${{ steps.find_apk.outputs.apk_name }}
          path: decompiled_jadx/

      - name: Upload Apktool decompile
        uses: actions/upload-artifact@v4
        with:
          name: apktool-decompile-${{ steps.find_apk.outputs.apk_name }}
          path: decompiled_apktool/

      - name: Upload analysis report
        uses: actions/upload-artifact@v4
        with:
          name: analysis-report-${{ steps.find_apk.outputs.apk_name }}
          path: analysis_report.txt
