name: Recompile, Sign, and Release APK

on:
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Tools
        run: |
          wget -q https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar -O apktool.jar
          wget -q https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar -O uber-apk-signer.jar

      - name: Recompile APK from output/apktool
        id: recompile
        run: |
          SOURCE_DIR="output/apktool"
          UNSIGNED_APK="rebuilt_unsigned.apk"

          if [ ! -d "$SOURCE_DIR" ]; then
            echo "❌ Source directory not found: $SOURCE_DIR"
            exit 1
          fi

          echo "🔨 Recompiling APK from $SOURCE_DIR..."
          java -jar apktool.jar b "$SOURCE_DIR" -o "$UNSIGNED_APK"
          echo "✅ Recompile complete: $UNSIGNED_APK"
          echo "unsigned_apk_path=$UNSIGNED_APK" >> $GITHUB_OUTPUT

      - name: Sign and Align with Debug Key
        id: sign
        run: |
          UNSIGNED_APK="${{ steps.recompile.outputs.unsigned_apk_path }}"
          SIGNED_APK="rebuilt_signed.apk"
          echo "🔑 Signing and aligning with uber-apk-signer's debug key..."
          java -jar uber-apk-signer.jar \
            --apks "$UNSIGNED_APK" \
            --out "$SIGNED_APK"
          echo "✅ Signing and alignment complete: $SIGNED_APK"
          echo "final_apk_path=$SIGNED_APK" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ github.run_number }}
          name: "Rebuilt APK Release #${{ github.run_number }}"
          body: |
            📦 **Rebuilt APK**

            - Recompiled from `output/apktool`.
            - Signed with a debug key using `uber-apk-signer`.
            - Workflow run: ${{ github.run_id }}
          files: "${{ steps.sign.outputs.final_apk_path }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}