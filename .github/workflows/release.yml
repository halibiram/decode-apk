      - name: Recompile APK with Apktool
        run: |
          if [ ! -d "output/apktool" ]; then
            echo "❌ Apktool kaynakları bulunamadı!"
            exit 1
          fi

          echo "🔨 APK yeniden derleniyor..."
          java -jar apktool.jar b output/apktool -o rebuilt_unsigned.apk
          echo "✅ Recompile tamamlandı: rebuilt_unsigned.apk"

      - name: Sign & Align APK
        run: |
          echo "🔑 Test keystore ile imzalanıyor..."

          # Keystore varsa yeniden oluşturma
          if [ ! -f my-release-key.keystore ]; then
            keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias \
              -keyalg RSA -keysize 2048 -validity 10000 \
              -storepass password -keypass password \
              -dname "CN=Test, OU=Dev, O=Company, L=City, S=State, C=US"
          fi

          # Sign
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore my-release-key.keystore \
            -storepass password -keypass password \
            rebuilt_unsigned.apk my-key-alias

          # Zipalign
          sudo apt-get update && sudo apt-get install -y zipalign
          zipalign -f 4 rebuilt_unsigned.apk rebuilt_signed.apk

          echo "✅ Sign + zipalign tamamlandı: rebuilt_signed.apk"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: rebuilt-${{ github.run_number }}
          name: "Rebuilt APK Release #${{ github.run_number }}"
          body: |
            🔨 Apktool ile yeniden derlenen ve imzalanan APK.
            - APK: `rebuilt_signed.apk`
            - Workflow run: ${{ github.run_id }}
          files: rebuilt_signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
